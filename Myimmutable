package immutable_lms;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.List;
enum Currency{Dollars,Rupees,Yens};
enum Department{Sales,Marketing,Production};


//create immutable class
final class Company
{

	private String companyName;
    private int registrationNumber;
    public List<Employee> elist ;
    public String department[];
//no setters and write only getters

//set values to private properties through constructor
Company(String companyName, int registrationNumber)
{
	this.companyName = companyName;
	this.registrationNumber=registrationNumber;
}
public String getCompanyName(){
	return companyName;
}
public int getRegistrationNumber(){
	return registrationNumber;
  }
public Employee registerEmployee()
{
	return new Employee();
 }
}

class Employee
{     
	private StringBuilder empName;
	private int empCode;
	private Currency salaryType;
	private float salary;
	public StringBuilder getEmpName() {
		return empName;
	}
	public void setEmpName(StringBuilder empName) {
		this.empName = empName;
	}
	public int getEmpcode() {
		return empCode;
	}
	public void setEmpcode(int empCode) {
		this.empCode = empCode;
	}

	public Currency getSalaryType() {
		return salaryType;
	}
	public void setSalaryType(Currency salaryType) {
		this.salaryType = salaryType;
	}
	public float getSalary() {
		return salary;
	}
	public void setSalary(float salary) {
		this.salary = salary;
	}
}
		
public class Myimmutable{
	

	public static void main(String[] args) throws IOException {
		
		Company c1=new Company("HCL",12345);
		Company c2=c1;
		c2=new Company("Wipro",99999);
		c2.getCompanyName().replace('W','P');
		
		Currency money=Currency.Rupees;
	
		//c1=null;
		System.out.println("Company:"+c1.getCompanyName()+"Registration Number:"+c1.getRegistrationNumber());
		System.out.println("Company:"+c2.getCompanyName()+"Registration Number:"+c2.getRegistrationNumber());
		char reply;
		c1.elist=new ArrayList<Employee>();
		do
		{
		Employee e=c1.registerEmployee();
		System.out.println("Enter Employee code:");
		//create input stream reader object
        BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
        e.setEmpcode(Integer.parseInt(br.readLine()));
        
        System.out.println("Enter Employee Name:");
        e.setEmpName(new StringBuilder(br.readLine()));
        
        //accept salary,salary type here
        e.setSalaryType(money);
        
        System.out.println("Enter salary in "+money);
        e.setSalary(Float.parseFloat(br.readLine()));
        
        //add employee type object to employee collection
        c1.elist.add(e);
        
        System.out.println("Wish to add more?(y/n)");
        reply=br.readLine().toLowerCase().charAt(0);
		}while(reply=='y');

		for(Employee emp : c1.elist)
		{
			System.out.println(emp.getEmpcode()+"\t"+emp.getEmpName());
		}
		
	}
	
}
